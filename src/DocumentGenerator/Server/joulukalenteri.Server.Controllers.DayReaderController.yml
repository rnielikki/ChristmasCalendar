### YamlMime:ManagedReference
items:
- uid: joulukalenteri.Server.Controllers.DayReaderController
  commentId: T:joulukalenteri.Server.Controllers.DayReaderController
  id: DayReaderController
  parent: joulukalenteri.Server.Controllers
  children:
  - joulukalenteri.Server.Controllers.DayReaderController.#ctor(IFileWrap,IDateTimeWrap)
  - joulukalenteri.Server.Controllers.DayReaderController.Get(System.Int32)
  - joulukalenteri.Server.Controllers.DayReaderController.Get(System.Int32,System.Int32)
  - joulukalenteri.Server.Controllers.DayReaderController.NotFoundMessage
  - joulukalenteri.Server.Controllers.DayReaderController.WrongDateMessage
  langs:
  - csharp
  - vb
  name: DayReaderController
  nameWithType: DayReaderController
  fullName: joulukalenteri.Server.Controllers.DayReaderController
  type: Class
  source:
    id: DayReaderController
    path: ''
    startLine: 96
  assemblies:
  - cs.temp.dll
  namespace: joulukalenteri.Server.Controllers
  summary: "\nReturns list of valid and available markdown file from the <xref href=\"joulukalenteri.Server.AppConfig.__dirpath\" data-throw-if-not-resolved=\"false\"></xref> folder.\n"
  example: []
  syntax:
    content: 'public class DayReaderController : ControllerBase'
    content.vb: >-
      Public Class DayReaderController

          Inherits ControllerBase
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: joulukalenteri.Server.Controllers.DayReaderController.WrongDateMessage
  commentId: F:joulukalenteri.Server.Controllers.DayReaderController.WrongDateMessage
  id: WrongDateMessage
  parent: joulukalenteri.Server.Controllers.DayReaderController
  langs:
  - csharp
  - vb
  name: WrongDateMessage
  nameWithType: DayReaderController.WrongDateMessage
  fullName: joulukalenteri.Server.Controllers.DayReaderController.WrongDateMessage
  type: Field
  source:
    id: WrongDateMessage
    path: ''
    startLine: 103
  assemblies:
  - cs.temp.dll
  namespace: joulukalenteri.Server.Controllers
  summary: "\nPlaceholder of content, when the date is invalid or future.\n"
  example: []
  syntax:
    content: public const string WrongDateMessage = "You have wrong date."
    return:
      type: System.String
    content.vb: Public Const WrongDateMessage As String = "You have wrong date."
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: joulukalenteri.Server.Controllers.DayReaderController.NotFoundMessage
  commentId: F:joulukalenteri.Server.Controllers.DayReaderController.NotFoundMessage
  id: NotFoundMessage
  parent: joulukalenteri.Server.Controllers.DayReaderController
  langs:
  - csharp
  - vb
  name: NotFoundMessage
  nameWithType: DayReaderController.NotFoundMessage
  fullName: joulukalenteri.Server.Controllers.DayReaderController.NotFoundMessage
  type: Field
  source:
    id: NotFoundMessage
    path: ''
    startLine: 107
  assemblies:
  - cs.temp.dll
  namespace: joulukalenteri.Server.Controllers
  summary: "\nPlaceholder of content, when the date is valid but file does not exist.\n"
  example: []
  syntax:
    content: public const string NotFoundMessage = "Sorry, the message is not ready!"
    return:
      type: System.String
    content.vb: Public Const NotFoundMessage As String = "Sorry, the message is not ready!"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: joulukalenteri.Server.Controllers.DayReaderController.#ctor(IFileWrap,IDateTimeWrap)
  commentId: M:joulukalenteri.Server.Controllers.DayReaderController.#ctor(IFileWrap,IDateTimeWrap)
  id: '#ctor(IFileWrap,IDateTimeWrap)'
  parent: joulukalenteri.Server.Controllers.DayReaderController
  langs:
  - csharp
  - vb
  name: DayReaderController(IFileWrap, IDateTimeWrap)
  nameWithType: DayReaderController.DayReaderController(IFileWrap, IDateTimeWrap)
  fullName: joulukalenteri.Server.Controllers.DayReaderController.DayReaderController(IFileWrap, IDateTimeWrap)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 115
  assemblies:
  - cs.temp.dll
  namespace: joulukalenteri.Server.Controllers
  summary: "\nGets wrappers as parameter for test purpose.\n"
  example: []
  syntax:
    content: public DayReaderController(IFileWrap filewrap, IDateTimeWrap datewrap)
    parameters:
    - id: filewrap
      type: IFileWrap
      description: Mocked fileyWrapper for the test.
    - id: datewrap
      type: IDateTimeWrap
      description: Mocked dateTimeWrapper for the test.
    content.vb: Public Sub New(filewrap As IFileWrap, datewrap As IDateTimeWrap)
  overload: joulukalenteri.Server.Controllers.DayReaderController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: joulukalenteri.Server.Controllers.DayReaderController.Get(System.Int32)
  commentId: M:joulukalenteri.Server.Controllers.DayReaderController.Get(System.Int32)
  id: Get(System.Int32)
  parent: joulukalenteri.Server.Controllers.DayReaderController
  langs:
  - csharp
  - vb
  name: Get(Int32)
  nameWithType: DayReaderController.Get(Int32)
  fullName: joulukalenteri.Server.Controllers.DayReaderController.Get(System.Int32)
  type: Method
  source:
    id: Get
    path: ''
    startLine: 125
  assemblies:
  - cs.temp.dll
  namespace: joulukalenteri.Server.Controllers
  summary: "\nGet the raw data from a day of current year.\n"
  example: []
  syntax:
    content: public string Get(int day)
    parameters:
    - id: day
      type: System.Int32
      description: Day of current year to get markdown string.
    return:
      type: System.String
      description: Raw markdown text file of the given day.
    content.vb: Public Function Get(day As Integer) As String
  overload: joulukalenteri.Server.Controllers.DayReaderController.Get*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: joulukalenteri.Server.Controllers.DayReaderController.Get(System.Int32,System.Int32)
  commentId: M:joulukalenteri.Server.Controllers.DayReaderController.Get(System.Int32,System.Int32)
  id: Get(System.Int32,System.Int32)
  parent: joulukalenteri.Server.Controllers.DayReaderController
  langs:
  - csharp
  - vb
  name: Get(Int32, Int32)
  nameWithType: DayReaderController.Get(Int32, Int32)
  fullName: joulukalenteri.Server.Controllers.DayReaderController.Get(System.Int32, System.Int32)
  type: Method
  source:
    id: Get
    path: ''
    startLine: 133
  assemblies:
  - cs.temp.dll
  namespace: joulukalenteri.Server.Controllers
  summary: "\nGet the raw data with a day and a year.\n"
  example: []
  syntax:
    content: public string Get(int year, int day)
    parameters:
    - id: year
      type: System.Int32
      description: Year to get markdown string.
    - id: day
      type: System.Int32
      description: Day to get markdown string.
    return:
      type: System.String
      description: Raw markdown text file of the given year and day.
    content.vb: Public Function Get(year As Integer, day As Integer) As String
  overload: joulukalenteri.Server.Controllers.DayReaderController.Get*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: joulukalenteri.Server.AppConfig.__dirpath
  commentId: F:joulukalenteri.Server.AppConfig.__dirpath
  isExternal: true
- uid: joulukalenteri.Server.Controllers
  commentId: N:joulukalenteri.Server.Controllers
  name: joulukalenteri.Server.Controllers
  nameWithType: joulukalenteri.Server.Controllers
  fullName: joulukalenteri.Server.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: joulukalenteri.Server.Controllers.DayReaderController.#ctor*
  commentId: Overload:joulukalenteri.Server.Controllers.DayReaderController.#ctor
  name: DayReaderController
  nameWithType: DayReaderController.DayReaderController
  fullName: joulukalenteri.Server.Controllers.DayReaderController.DayReaderController
- uid: IFileWrap
  commentId: '!:IFileWrap'
  isExternal: true
  name: IFileWrap
  nameWithType: IFileWrap
  fullName: IFileWrap
- uid: IDateTimeWrap
  isExternal: true
  name: IDateTimeWrap
  nameWithType: IDateTimeWrap
  fullName: IDateTimeWrap
- uid: joulukalenteri.Server.Controllers.DayReaderController.Get*
  commentId: Overload:joulukalenteri.Server.Controllers.DayReaderController.Get
  name: Get
  nameWithType: DayReaderController.Get
  fullName: joulukalenteri.Server.Controllers.DayReaderController.Get
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
