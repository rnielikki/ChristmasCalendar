### YamlMime:ManagedReference
items:
- uid: joulukalenteri.Client.Services.ArchiveReader
  commentId: T:joulukalenteri.Client.Services.ArchiveReader
  id: ArchiveReader
  parent: joulukalenteri.Client.Services
  children:
  - joulukalenteri.Client.Services.ArchiveReader.#ctor(Microsoft.Extensions.Configuration.IConfiguration,joulukalenteri.Shared.IDateTime)
  - joulukalenteri.Client.Services.ArchiveReader.GetYears
  - joulukalenteri.Client.Services.ArchiveReader.IsAvailableYear(System.Int32)
  langs:
  - csharp
  - vb
  name: ArchiveReader
  nameWithType: ArchiveReader
  fullName: joulukalenteri.Client.Services.ArchiveReader
  type: Class
  source:
    remote:
      path: src/Client/Services/ArchiveReader.cs
      branch: non-master
      repo: https://github.com/rnielikki/ChristmasCalendar.git
    id: ArchiveReader
    path: ../../src/Client/Services/ArchiveReader.cs
    startLine: 9
  assemblies:
  - joulukalenteri.Client
  namespace: joulukalenteri.Client.Services
  summary: "\nParses and reads JSON archive list from the server.\n"
  example: []
  syntax:
    content: public class ArchiveReader
    content.vb: Public Class ArchiveReader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: joulukalenteri.Client.Services.ArchiveReader.#ctor(Microsoft.Extensions.Configuration.IConfiguration,joulukalenteri.Shared.IDateTime)
  commentId: M:joulukalenteri.Client.Services.ArchiveReader.#ctor(Microsoft.Extensions.Configuration.IConfiguration,joulukalenteri.Shared.IDateTime)
  id: '#ctor(Microsoft.Extensions.Configuration.IConfiguration,joulukalenteri.Shared.IDateTime)'
  parent: joulukalenteri.Client.Services.ArchiveReader
  langs:
  - csharp
  - vb
  name: ArchiveReader(IConfiguration, IDateTime)
  nameWithType: ArchiveReader.ArchiveReader(IConfiguration, IDateTime)
  fullName: joulukalenteri.Client.Services.ArchiveReader.ArchiveReader(Microsoft.Extensions.Configuration.IConfiguration, joulukalenteri.Shared.IDateTime)
  type: Constructor
  source:
    remote:
      path: src/Client/Services/ArchiveReader.cs
      branch: non-master
      repo: https://github.com/rnielikki/ChristmasCalendar.git
    id: .ctor
    path: ../../src/Client/Services/ArchiveReader.cs
    startLine: 19
  assemblies:
  - joulukalenteri.Client
  namespace: joulukalenteri.Client.Services
  summary: "\nCalls archive reader manually for test purpose.\n"
  example: []
  syntax:
    content: public ArchiveReader(IConfiguration config, IDateTime datetime)
    parameters:
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Configuration from appsettings.json
    - id: datetime
      type: joulukalenteri.Shared.IDateTime
      description: Current date
    content.vb: Public Sub New(config As IConfiguration, datetime As IDateTime)
  overload: joulukalenteri.Client.Services.ArchiveReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: joulukalenteri.Client.Services.ArchiveReader.GetYears
  commentId: M:joulukalenteri.Client.Services.ArchiveReader.GetYears
  id: GetYears
  parent: joulukalenteri.Client.Services.ArchiveReader
  langs:
  - csharp
  - vb
  name: GetYears()
  nameWithType: ArchiveReader.GetYears()
  fullName: joulukalenteri.Client.Services.ArchiveReader.GetYears()
  type: Method
  source:
    remote:
      path: src/Client/Services/ArchiveReader.cs
      branch: non-master
      repo: https://github.com/rnielikki/ChristmasCalendar.git
    id: GetYears
    path: ../../src/Client/Services/ArchiveReader.cs
    startLine: 27
  assemblies:
  - joulukalenteri.Client
  namespace: joulukalenteri.Client.Services
  summary: "\nGet list of available calendar years asynchronously.\n"
  example: []
  syntax:
    content: public IEnumerable<int> GetYears()
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: Enumerable integers of available years.
    content.vb: Public Function GetYears As IEnumerable(Of Integer)
  overload: joulukalenteri.Client.Services.ArchiveReader.GetYears*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: joulukalenteri.Client.Services.ArchiveReader.IsAvailableYear(System.Int32)
  commentId: M:joulukalenteri.Client.Services.ArchiveReader.IsAvailableYear(System.Int32)
  id: IsAvailableYear(System.Int32)
  parent: joulukalenteri.Client.Services.ArchiveReader
  langs:
  - csharp
  - vb
  name: IsAvailableYear(Int32)
  nameWithType: ArchiveReader.IsAvailableYear(Int32)
  fullName: joulukalenteri.Client.Services.ArchiveReader.IsAvailableYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/Client/Services/ArchiveReader.cs
      branch: non-master
      repo: https://github.com/rnielikki/ChristmasCalendar.git
    id: IsAvailableYear
    path: ../../src/Client/Services/ArchiveReader.cs
    startLine: 43
  assemblies:
  - joulukalenteri.Client
  namespace: joulukalenteri.Client.Services
  summary: "\nGet Available year.\n"
  example: []
  syntax:
    content: public bool IsAvailableYear(int year)
    parameters:
    - id: year
      type: System.Int32
      description: year to know if it&apos;s available
    return:
      type: System.Boolean
      description: <code>true</code> if the year is available, <code>false</code> if it doesn&apos;t
    content.vb: Public Function IsAvailableYear(year As Integer) As Boolean
  overload: joulukalenteri.Client.Services.ArchiveReader.IsAvailableYear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: joulukalenteri.Client.Services
  commentId: N:joulukalenteri.Client.Services
  name: joulukalenteri.Client.Services
  nameWithType: joulukalenteri.Client.Services
  fullName: joulukalenteri.Client.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: joulukalenteri.Client.Services.ArchiveReader.#ctor*
  commentId: Overload:joulukalenteri.Client.Services.ArchiveReader.#ctor
  name: ArchiveReader
  nameWithType: ArchiveReader.ArchiveReader
  fullName: joulukalenteri.Client.Services.ArchiveReader.ArchiveReader
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: joulukalenteri.Shared.IDateTime
  commentId: T:joulukalenteri.Shared.IDateTime
  parent: joulukalenteri.Shared
  name: IDateTime
  nameWithType: IDateTime
  fullName: joulukalenteri.Shared.IDateTime
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: joulukalenteri.Shared
  commentId: N:joulukalenteri.Shared
  name: joulukalenteri.Shared
  nameWithType: joulukalenteri.Shared
  fullName: joulukalenteri.Shared
- uid: joulukalenteri.Client.Services.ArchiveReader.GetYears*
  commentId: Overload:joulukalenteri.Client.Services.ArchiveReader.GetYears
  name: GetYears
  nameWithType: ArchiveReader.GetYears
  fullName: joulukalenteri.Client.Services.ArchiveReader.GetYears
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: joulukalenteri.Client.Services.ArchiveReader.IsAvailableYear*
  commentId: Overload:joulukalenteri.Client.Services.ArchiveReader.IsAvailableYear
  name: IsAvailableYear
  nameWithType: ArchiveReader.IsAvailableYear
  fullName: joulukalenteri.Client.Services.ArchiveReader.IsAvailableYear
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
